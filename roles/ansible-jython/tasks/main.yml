---
- include: dl/download-{{ dl_mode | default('local') }}.yml
  vars:
    module: "{{ item.module }}"
    url: "{{ item.url }}"
  with_items:
    - { # Jython distro
        module: "{{ jython_distro }}",
        url: "{{ jython_distro_url }}"
      }
    - { # syslog4j
        module: "syslog4j-{{ syslog4j_version }}.jar",
        url: "http://repo1.maven.org/maven2/org/graylog2/syslog4j/{{ syslog4j_version }}/syslog4j-{{ syslog4j_version }}.jar"
      }
    - { # jna
        module: "jna-{{ jna_version }}.jar",
        url: "https://maven.java.net/content/repositories/releases/net/java/dev/jna/jna/{{ jna_version }}/jna-{{ jna_version }}.jar"
      }

- name: Install Jython
  shell:
    cmd: java -jar {{ download_dir }}/{{ jython_distro }} -s -d {{ jython_home }}
  args:
    creates: "{{ jython_home }}/bin"

# REVIEW review if this is not a security risk but otherwise no logged in user
# will be able to load a jar from classpwth without a pesky error message
- name: Free Jython Cache Directory
  file: path={{ jython_home }}/cachedir state=directory recurse=no mode=0777

- name: Free Jython Cache Package Directory
  file: path={{ jython_home }}/cachedir/packages state=directory recurse=no mode=0777

- name: Set Jython Default Shell
  template:
    src: jython.sh.j2
    dest: "/etc/profile.d/jython.sh"
    owner: root
    group: root
    mode: "0755"
    force: "yes"

- name: Link To User Local Environment
  file:
    src: "{{ jython_home }}/bin/jython"
    dest: /usr/bin/jython
    state: link
    owner: root
    group: root

# REVIEW should really implement the module using syslog4j and use the socket instead of enableing UDP rsyslog
# http://www.syslog4j.org/
# http://www.gnu.org/software/libc/manual/html_node/syslog_003b-vsyslog.html

# "unpack" syslog to JYTHON_HOME/Lib
- name: Unpack syslog4j to Jython Lib
  shell:
    cmd: unzip {{ download_dir }}/syslog4j-{{ syslog4j_version }}.jar 'org/graylog2/syslog4j/*' -d {{ jython_home }}/Lib
  args:
    creates: "{{ jython_home }}/Lib/org/productivity/java/syslog4j"

# "unpack" jna to JYTHON_HOME/Lib
- name: Unpack Java Native Interface to Jython Lib
  shell:
    cmd: unzip {{ download_dir }}/jna-4.2.2.jar 'com/sun/jna*' -d {{ jython_home }}/Lib
  args:
    creates: "{{ jython_home }}/Lib/com/sun/jna"
